{"version":3,"sources":["pages/Blog.js"],"names":["register","number","index","total_sec","withRouter","props","history","useState","email","contrasena","nombre","preguntasTraidas","setPreguntasTraida","paginaSiguiente","setPaginaSiguiente","paginaAnterior","setPaginaAnterior","totalPage","setTotalPage","addData","setVal","useContext","Auth","isAuthentificated","setIsAuthentificated","imagen","setImagen","preview","setPreview","cargar","setCargar","cargarPagina","setCargarPagina","setMensajeServidor","spinnerHacerPregunta","setSpinnerHacerPregunta","datoBusqueda","setDatoBusqueda","mensajeError","setMensajeError","pageActual","setPageActual","HacerPregunta","e","a","preventDefault","console","log","fs","FormData","append","window","sessionStorage","getItem","axios","post","headers","respuesta","respuestaServidor","data","toastHTML","M","toast","html","TraerPreguntas","BuscarMateria","method","url","datos","docs","nextPage","prevPage","totalPages","page","TraerPreguntasConPaginacion","id","PaginacionPage","y","i","push","lista","map","x","class","href","onClick","useEffect","reader","FileReader","onloadend","result","readAsDataURL","document","readyState","className","onSubmit","action","type","name","value","placeholder","onChange","target","required","editor","ClassicEditor","getData","aria-label","handleChangeImagen","files","color","secondaryColor","height","width","ReactHtmlParser","elems","querySelectorAll","Modal","init","src","alt","timestamp","format","querySelector","to"],"mappings":"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","file":"static/js/4.2ff12e43.chunk.js","sourcesContent":["import React , {useState , useEffect , useContext} from \"react\";\r\nimport {CKEditor} from '@ckeditor/ckeditor5-react'\r\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic'\r\nimport { login , registrar } from \"../services/AuthApi\";\r\nimport axios from 'axios'\r\nimport {Link , withRouter} from 'react-router-dom'\r\nimport Auth from '../contexts/Auth'\r\nimport '../styles/blog.css'\r\nimport '../styles/paginacion.css'\r\nimport BarradeNavegacion from '../components/BarradeNavegacion'\r\nimport ReactHtmlParser from \"react-html-parser\"\r\nimport M from 'materialize-css'\r\nimport Loader from \"react-loader-spinner\";\r\nimport  { format , register } from \"timeago.js\"\r\n\r\n//timeago\r\nregister('es_ES', (number, index, total_sec) => [\r\n    ['justo ahora', 'ahora mismo'],\r\n    ['hace %s segundos', 'en %s segundos'],\r\n    ['hace 1 minuto', 'en 1 minuto'],\r\n    ['hace %s minutos', 'en %s minutos'],\r\n    ['hace 1 hora', 'en 1 hora'],\r\n    ['hace %s horas', 'in %s horas'],\r\n    ['hace 1 dia', 'en 1 dia'],\r\n    ['hace %s dias', 'en %s dias'],\r\n    ['hace 1 semana', 'en 1 semana'],\r\n    ['hace %s semanas', 'en %s semanas'],\r\n    ['1 mes', 'en 1 mes'],\r\n    ['hace %s meses', 'en %s meses'],\r\n    ['hace 1 a単o', 'en 1 a単o'],\r\n    ['hace %s a単os', 'en %s a単os']\r\n][index]);\r\nconst timeago = timestamp => format(timestamp, 'es_ES');\r\n////////////////////////////////////////////\r\n\r\n\r\n\r\n\r\nconst Blog = (props) => {\r\n    const {history} = props\r\n\r\n    const [user , setUser] = useState({\r\n        email:'',\r\n        contrasena:''\r\n    })\r\n    const [userR , setUserR] = useState({\r\n        nombre:'',\r\n        email:'',\r\n        contrasena:''\r\n    })\r\n    const [respuestaDbR , setRespuestaDbR ] = useState('')\r\n    const [preguntasTraidas , setPreguntasTraida] = useState([])\r\n    const [respuestaDb , setRespuestaDb ] = useState('')\r\n    const [paginaSiguiente , setPaginaSiguiente ] = useState(1)\r\n    const [paginaAnterior , setPaginaAnterior ] = useState(1)\r\n    const [totalPage , setTotalPage ] = useState(1)\r\n    const [addData , setVal] = useState('')\r\n    const {isAuthentificated , setIsAuthentificated} = useContext(Auth)\r\n    const [probar , setProbar] = useState(true) \r\n    const [imagen , setImagen] = useState('') \r\n    const [preview, setPreview] = useState(\"\"); \r\n    const [cargar, setCargar] = useState(false); \r\n    const [cargarPagina, setCargarPagina] = useState(false); \r\n    const [mensajeServidor, setMensajeServidor] = useState(\"\");\r\n    const [spinnerHacerPregunta, setSpinnerHacerPregunta] = useState(false);\r\n    const [elegirForm, setElegirForm] = useState(true);\r\n    const [datoBusqueda , setDatoBusqueda] = useState([]) \r\n    const [mensajeError , setMensajeError] = useState(\"\");\r\n    const [pageActual , setPageActual] = useState(1)\r\n   \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n   \r\n\r\n\r\n    const handleChange = ({currentTarget}) => {\r\n        const {name , value} = currentTarget;\r\n        setUser({...user , [name] : value})\r\n        \r\n    }\r\n\r\n    const handleChangeR = ({currentTarget}) => {\r\n        const {name , value} = currentTarget;\r\n        setUserR({...userR , [name] : value})\r\n        console.log(userR)\r\n    }\r\n\r\n\r\n    const HacerPregunta = async (e) => {\r\n        e.preventDefault()\r\n        if (isAuthentificated) {\r\n            setSpinnerHacerPregunta(true)\r\n            console.log(addData)\r\n            const fs = new FormData()\r\n            fs.append(\"file\" , imagen)\r\n            fs.append(\"user\" , window.sessionStorage.getItem('user'))\r\n            fs.append(\"pregunta\" , addData)\r\n            fs.append(\"numresp\" , 0)\r\n            const respuesta = await axios.post(\"https://app-node-react.herokuapp.com/preguntas\", fs , {headers :{\"Content-Type\":\"multipart/form-data\"}})\r\n            const respuestaServidor = respuesta.data\r\n            console.log(respuestaServidor)\r\n            setMensajeServidor(respuestaServidor)\r\n    \r\n            if (respuestaServidor != \"\") {\r\n                var toastHTML = '<span>'+ respuestaServidor + '</span>';\r\n                M.toast({html: toastHTML})\r\n            }\r\n\r\n            setPreview(\"\")\r\n            setVal(\"\")\r\n            await TraerPreguntas()\r\n\r\n\r\n        }else{\r\n            \r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n   const BuscarDatos = (e) => {\r\n    setDatoBusqueda(e.target.value) \r\n    \r\n   }\r\n    const BuscarMateria = async (e) =>{\r\n        e.preventDefault()\r\n        const datos = await axios({\r\n            method:'post' , \r\n            url : 'https://app-node-react.herokuapp.com/buscar_pregunta', \r\n            data: {'preguntaQueSeBusca':datoBusqueda}\r\n        })\r\n        \r\n        console.log(datos.data)\r\n        setPreguntasTraida(datos.data)\r\n    }\r\n\r\n\r\n   const CogerDatosEditorTexto = (e , editor) =>{\r\n       const data = editor.getData()\r\n       setVal(data)\r\n       \r\n   }\r\n\r\n\r\n   const TraerPreguntas = async () =>{\r\n    const datos = await axios({\r\n        method:'get' , \r\n        url : 'https://app-node-react.herokuapp.com/coger-preguntas' , \r\n    })\r\n    console.log(datos.data.docs , \"ffffffffffffffffffffffff\")\r\n    setPreguntasTraida(datos.data.docs)\r\n    setPaginaSiguiente(datos.data.nextPage)\r\n    setPaginaAnterior(datos.data.prevPage)\r\n    setTotalPage(datos.data.totalPages)\r\n    setPageActual(datos.data.page)\r\n    console.log(totalPage, \"gggggggggggggggggggggggggggggg\")\r\n    if (datos.data.docs) {\r\n        setCargar(true)\r\n        setSpinnerHacerPregunta(false)\r\n    }else{\r\n        setCargar(false)\r\n    }\r\n    console.log(datos.data)\r\n    \r\n  }\r\n\r\n  const TraerPreguntasConPaginacion = async (id) =>{\r\n    const datos = await axios({\r\n        method:'get' , \r\n        url : `https://app-node-react.herokuapp.com/coger-preguntas-paginacio/${id}` , \r\n    })\r\n    console.log(datos.data.docs)\r\n    setPreguntasTraida(datos.data.docs)\r\n    setPaginaSiguiente(datos.data.nextPage)\r\n    setPaginaAnterior(datos.data.prevPage)\r\n    setTotalPage(datos.data.totalPages)\r\n    setPageActual(datos.data.page)\r\n    if (datos.data.docs) {\r\n        setCargar(true)\r\n        setSpinnerHacerPregunta(false)\r\n    }else{\r\n        setCargar(false)\r\n    }\r\n    console.log(datos.data)\r\n    \r\n  }\r\n\r\n\r\n  const handleChangeImagen = e =>{\r\n    setImagen(e)\r\n  }\r\n  \r\n       \r\n\r\nconst PaginacionPage = () => {\r\n        const y = []\r\n        var w = \"\"\r\n     \r\n            for (let i = 0; i < totalPage; i++) {\r\n                var e = i+1\r\n                y.push(e)\r\n\r\n                if (pageActual == i+1) {\r\n                }else{\r\n                    \r\n                }\r\n            }\r\n        console.log(w)\r\n\r\n        const lista = y.map((x)=>(\r\n            <>\r\n                {pageActual==x?\r\n                <li  class = \"active paginacion-boton\" ><a href=\"#!\" onClick = { () =>{ \r\n                    const val = \"e\"+ x ;\r\n                    TraerPreguntasConPaginacion(val)}\r\n                } >{x}</a>\r\n                </li>\r\n                :\r\n                <li  class = \"paginacion-boton \" ><a href=\"#!\" onClick = { () =>{ \r\n                    const val = \"e\"+ x ;\r\n                    TraerPreguntasConPaginacion(val)}\r\n                } >{x}</a>\r\n                </li>\r\n                }\r\n  \r\n            </>\r\n\r\n            )                          \r\n        )\r\n        console.log(lista)\r\n    return(\r\n        <ul class=\"pagination\">\r\n            {paginaAnterior?\r\n            <li class=\"waves-effect\"><a href=\"#!\" onClick = { () =>{ \r\n                const val = \"p\"+ paginaAnterior ;\r\n                TraerPreguntasConPaginacion(val)}\r\n               }><i class=\"material-icons\">chevron_left</i></a>\r\n            </li>\r\n            :\r\n            <li class=\"disabled\"><a href=\"#!\" \r\n               ><i class=\"material-icons\">chevron_left</i></a>\r\n            </li>\r\n            }\r\n\r\n\r\n            {lista}\r\n            \r\n            \r\n            {paginaSiguiente?\r\n            <li class=\"waves-effect\"><a href=\"#!\"\r\n             onClick = { () =>{ \r\n                const val = \"n\"+ paginaSiguiente ;\r\n                TraerPreguntasConPaginacion(val)}\r\n               }\r\n            ><i class=\"material-icons\">chevron_right</i></a></li>\r\n            :\r\n            <li class=\"disabled\"><a href=\"#!\" ><i class=\"material-icons\">chevron_right</i></a></li>\r\n            }\r\n\r\n        </ul>\r\n    )\r\n}\r\nuseEffect(()=>{\r\n    \r\n    if (imagen) {\r\n        const reader = new FileReader()\r\n        reader.onloadend = () =>{\r\n            setPreview(reader.result) ;\r\n\r\n        }\r\n        reader.readAsDataURL(imagen)\r\n    }else{\r\n        setPreview(null)\r\n    }\r\n\r\n        if (document.readyState == \"loading\") {\r\n            console.log(cargarPagina)\r\n\r\n        }else{\r\n            \r\n            setCargarPagina(true)\r\n        }\r\n},[imagen] )\r\n\r\n\r\nuseEffect(()=>{\r\n    \r\n    TraerPreguntas()\r\n    \r\n} , [])\r\n\r\nreturn (\r\n    \r\n<div>\r\n    <BarradeNavegacion/>\r\n\r\n\r\n    <div className =\"contenedor-buscar\">\r\n        <form onSubmit = {BuscarMateria}  className =\"formulario-buscar\" action=\"/articulos_pc\" method=\"POST\">\r\n            <div className =\"input-field input-buscar\">\r\n                    <input \r\n                        id=\"icon_prefix\" \r\n                        type=\"text\" \r\n                        name=\"articulo\" \r\n                        value = {datoBusqueda}\r\n                        placeholder=\"Que buscas ?\"\r\n                        onChange={BuscarDatos}                              \r\n                        required/>\r\n                    <button type=\"submit\" className =\"btn-small prefix boton-de-busqueda\"><i className =\"material-icons \">search</i></button>\r\n            </div>\r\n        </form>\r\n    </div>\r\n\r\n\r\n    <div className = 'contenedor-pub'>\r\n            <div className=\"container-img-pub  \" >\r\n                <div className =\"row formulario-contenedor-text-editor \" >\r\n                    <div className =\"col s12 texto-encabezado-formulario\">\r\n                        <p>publica tu problema</p>\r\n                    </div>\r\n                    <form className =\"formulario\" onSubmit ={HacerPregunta}  >\r\n                        <div className=\"editor\">\r\n                            <CKEditor editor= {ClassicEditor} data={addData} onChange={CogerDatosEditorTexto}  />\r\n                        </div>\r\n                        <div className=\"file-select\" id=\"src-file1\" >\r\n                            <input type=\"file\" name=\"src-file1\" aria-label=\"Archivo\" onChange={(e)=>handleChangeImagen(e.target.files[0])}/>\r\n                        </div>\r\n                        {isAuthentificated ?\"\":                         \r\n                            <div className=\"respuestaError\">\r\n                                <p>{mensajeError}</p>\r\n                            </div>\r\n                        }\r\n\r\n                        {spinnerHacerPregunta?      \r\n                        <div className=\"Spinner-a単adir-pregunta\">\r\n                            <Loader\r\n                                type=\"TailSpin\"\r\n                                color=\"#0d47a1\"\r\n                                secondaryColor = \"#0d47a1\"\r\n                                height={30}\r\n                                width={30}        \r\n                            />\r\n                        </div>  :\"\"}\r\n\r\n\r\n                        {isAuthentificated?                \r\n                        <button type=\"submit\" className=\" btnn btn-small\">Publicar</button>:                               \r\n                        <a onClick = {()=>{setMensajeError(\"por favor inicia session\")}}  className=\"btnn btn-small\">Publicar </a>}                                                  \r\n\r\n                    </form>\r\n                </div>\r\n                    <div className=\"previsualizacion margen-abajo\">\r\n                        <div className=\"previsualizacion-50\">\r\n                            <div className=\"contenido-teorico\">\r\n                                {ReactHtmlParser(addData)}\r\n                            </div>\r\n                            <div className = \"imagen-previ\">\r\n                                <a onClick = {()=>{\r\n                                    const elems = document.querySelectorAll(\".previsualisacioFotoFFF\");\r\n                                    const instance = M.Modal.init(elems,{\"inDuration\":0,\"outDuration\":0,\"preventScrolling\":false});\r\n                                    }}  className=\"modal-trigger\" href= \"#previsualisacioFotoFFF\">\r\n                                    <img src={preview}  alt=\"\" />\r\n                                </a>\r\n                            </div>\r\n\r\n                            <div >\r\n                                <div className= \" modal modall previsualisacioFotoFFF\"id= \"previsualisacioFotoFFF\">\r\n                                    <div className=\"modal-content\">\r\n                                        <img src={preview}  />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className =\"texto-encabezado-pregunats-recientes\">\r\n                        <p>Mas recientes</p>\r\n                    </div>\r\n                {cargar?\r\n                    preguntasTraidas.map((datos)=>\r\n                        <div className =\"estilos-preguntas \" key = {datos[\"url\"]}>\r\n                            <div className =\"contenedor-titulo-fecha-pregunta \">\r\n\r\n                                <div className =\"contenedor-titulo-fecha\">\r\n                                    <div className =\"contenedor-fecha\">\r\n                                        <p>{timeago(datos[\"fecha\"])}</p> \r\n                                    </div>\r\n                                    <div className =\"contenedor-user\">\r\n                                    <p>{datos[\"user\"]}</p>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className =\"contenedor-titulo-pregunta\">\r\n                                    <h4>{ReactHtmlParser(datos[\"pregunta\"])}</h4>\r\n                                    \r\n                                </div>\r\n                                {datos[\"url\"]?\r\n                                <div className=\"Imagen-Pregunta\">\r\n                                    <div className=\"contenedor-ver-imagen\">\r\n                                        <a onClick = {()=> {                                                    \r\n                                            const elems = document.querySelector(`#${datos[\"clave\"]}`);\r\n                                            const instance = M.Modal.init(elems,{\"inDuration\":0,\"outDuration\":0,\"preventScrolling\":false});\r\n                                            }} className=\"modal-trigger\" href={`#${datos[\"clave\"]}`}><img src= {`${datos[\"url\"]}`} alt=\"\" />\r\n                                        </a>\r\n                                        <a onClick = {()=> {                                                    \r\n                                            const elems = document.querySelector(`#${datos[\"clave\"]}`);\r\n                                            const instance = M.Modal.init(elems,{\"inDuration\":0,\"outDuration\":0,\"preventScrolling\":false});\r\n                                            }}\r\n                                            className=\"ver-imagen modal-trigger\" href={`#${datos[\"clave\"]}`}><i className=\" material-icons\">visibility</i></a>\r\n                                    </div>\r\n\r\n                                            \r\n                                </div>:\"\"}\r\n\r\n                                <div >\r\n                                        <div className={`modal modall ${datos[\"clave\"]}`} id={`${datos[\"clave\"]}`}>\r\n                                            <div className=\"modal-content\">\r\n                                                <img  src= {`${datos[\"url\"]}`} alt=\"\" />\r\n                                            </div>\r\n                                        </div>\r\n                                </div>\r\n                        \r\n\r\n                                <div className =\"contenedor-ver-y-responder\">\r\n                                    <div className =\"contenedor-numero-respuestas\">\r\n                                        <p> <span>{datos[\"numresp\"]} </span> respuestas</p>\r\n                                    </div>\r\n                                    <div className=\"contenedor-ver-mas\">\r\n                                        <Link to = {`/respuestas/${datos[\"_id\"]}`} className =\"btn btn-small\">respo.</Link>\r\n                                    </div>\r\n                                    <div className =\"contenedor-responder\">\r\n                                    </div>\r\n                                </div>\r\n\r\n\r\n\r\n                            </div>\r\n                        </div>\r\n                        ):\r\n\r\n                        <div className =\"estilos-spiner container\">\r\n                            <div className =\"contenedor-spinner\">\r\n                            <Loader\r\n                                    type=\"TailSpin\"\r\n                                    color=\"#0d47a1\"\r\n                                    secondaryColor = \"#0d47a1\"\r\n                                    height={40}\r\n                                    width={40}        \r\n                            />\r\n                            </div>\r\n                        </div>\r\n                }\r\n\r\n\r\n\r\n\r\n        </div>\r\n    </div>\r\n    <div className=\"paginacion\">\r\n        <PaginacionPage/>\r\n     </div>        \r\n</div>\r\n    )\r\n}\r\nexport default withRouter(Blog);"],"sourceRoot":""}