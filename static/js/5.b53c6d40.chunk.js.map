{"version":3,"sources":["pages/home.js"],"names":["withRouter","props","useState","materia","setMateria","anal","setAnal","verOpciones","setVerOpciones","verDatos","setVerDatos","verMateria","setVerMateria","verAnales","setVerAnales","materiasTraidas","setMateriasTraidas","analesTraidas","setAnalesTraidas","materiasTodas","setMateriasTodas","año","setAño","mes","setMes","face","setFace","setGrupo","ver","setVer","mensajeError","setMensajeError","ejecutarTraerMateria","history","a","BuscarMateria","axios","method","url","datos","data","BuscarAnales","console","log","todasLasMateriaDatos","materias","BuscarMateriaSeleccionadaLink","datosMateria","window","open","BuscarMateriaSeleccionadaLinkSinCoreccion","BuscarMateriaSeleccionadaLinkAnalesSC","useEffect","className","to","id","name","type","value","onChange","e","target","disabled","selected","map","key","required","onClick"],"mappings":"oOAseeA,uBA/dD,SAACC,GAAW,IAAD,EAEUC,mBAAS,eAFnB,mBAEdC,EAFc,KAEJC,EAFI,OAGIF,mBAAS,QAHb,mBAGdG,EAHc,KAGPC,EAHO,OAImBJ,oBAAS,GAJ5B,mBAIdK,EAJc,KAIAC,EAJA,OAKaN,oBAAS,GALtB,mBAKdO,EALc,KAKHC,EALG,OAMiBR,oBAAS,GAN1B,mBAMdS,EANc,KAMDC,EANC,OAOcV,oBAAS,GAPvB,mBAOdW,EAPc,KAOHC,EAPG,OAQwBZ,mBAAS,IARjC,mBAQda,EARc,KAQEC,EARF,OASoBd,mBAAS,IAT7B,mBASde,EATc,KASAC,EATA,OAUoBhB,mBAAS,IAV7B,mBAUdiB,EAVc,KAUAC,EAVA,OAWElB,mBAAS,IAXX,mBAWdmB,EAXc,KAWRC,EAXQ,OAYEpB,mBAAS,IAZX,mBAYdqB,EAZc,KAYRC,EAZQ,OAaItB,mBAAS,IAbb,oBAaduB,GAbc,MAaPC,GAbO,SAcQxB,oBAAS,GAdjB,qCAeMA,oBAAS,IAff,qBAeNyB,IAfM,gBAgBEzB,mBAAS,IAhBX,qBAgBd0B,GAhBc,MAgBRC,GAhBQ,SAiBoB3B,mBAAS,IAjB7B,qBAiBd4B,GAjBc,MAiBCC,GAjBD,MAsCfC,IApBY/B,EAAXgC,QAoBmB,uCAAG,sBAAAC,EAAA,sDACzBC,KADyB,2CAAH,sDA8CpBA,GAAa,uCAAG,4BAAAD,EAAA,sEACEE,IAAM,CACtBC,OAAO,MACPC,IAAM,YAHQ,OAKA,KAJZC,EADY,QAKRC,OACN5B,EAAc2B,EAAMC,MACpBxB,EAAmBuB,EAAMC,MACzB5B,GAAc,IARA,2CAAH,qDAeb6B,GAAY,uCAAG,4BAAAP,EAAA,sEACGE,IAAM,CACtBC,OAAO,MACPC,IAAM,iBAHO,OACXC,EADW,OAKjBG,QAAQC,IAAIJ,EAAMC,KAAO,6BACP,IAAdD,EAAMC,OACNtB,EAAiBqB,EAAMC,MACvB1B,GAAa,IARA,2CAAH,qDAeZ8B,GAAoB,uCAAG,WAAOC,GAAP,eAAAX,EAAA,sEACLE,IAAM,CACtBC,OAAO,MACPC,IAAM,OAASO,IAHM,OACnBN,EADmB,OAKzBG,QAAQC,IAAIJ,EAAMC,MAEA,IAAdD,EAAMC,OACNpB,EAAiBmB,EAAMC,MACvB9B,GAAY,IATS,2CAAH,sDAehBoC,GAA6B,uCAAG,8BAAAZ,EAAA,6DAC5Ba,EAAe1B,EAAME,EAAME,GAAOtB,EACxCuC,QAAQC,IAAII,GAFsB,SAGdX,IAAM,CACtBC,OAAO,MACPC,IAAG,sBAAkBS,KALS,OAG5BR,EAH4B,OAOlCG,QAAQC,IAAIJ,EAAMC,MACC,IAAdD,EAAMC,MAA+B,wBAAdD,EAAMC,KAC9BQ,OAAOC,KAAP,UAAeV,EAAMC,OAGrBT,GAAgB,kBAZc,2CAAH,qDAiB7BmB,GAAyC,uCAAG,8BAAAhB,EAAA,6DACxCa,EAAe1B,EAAME,EAAME,GAAOtB,EACxCuC,QAAQC,IAAII,GAFkC,SAG1BX,IAAM,CACtBC,OAAO,MACPC,IAAG,sBAAkBS,KALqB,OAGxCR,EAHwC,OAS1CG,QAAQC,IAAIJ,EAAMC,MACC,IAAdD,EAAMC,MAA+B,4BAAdD,EAAMC,KAC9BQ,OAAOC,KAAP,UAAeV,EAAMC,OAGrBT,GAAgB,kBAdsB,2CAAH,qDAoBzCoB,GAAqC,uCAAG,8BAAAjB,EAAA,6DACpCa,EAAe1C,EACrBqC,QAAQC,IAAII,GAF8B,SAGtBX,IAAM,CACtBC,OAAO,MACPC,IAAG,2BAAuBS,KALY,OAGpCR,EAHoC,OAQtCG,QAAQC,IAAIJ,EAAMC,MACC,IAAdD,EAAMC,MAA+B,4BAAdD,EAAMC,KAC9BQ,OAAOC,KAAP,UAAeV,EAAMC,OAGrBT,GAAgB,kBAbkB,2CAAH,qDA+FhD,OAPCqB,qBAAU,WACNjB,KACAS,GAAqBzC,GACrBsC,OAEF,IAGE,sBAAKY,UAAY,GAAjB,UACI,cAAC,IAAD,IACA,qBAAKA,UAAU,uBAAf,SACI,sBAAKA,UAAU,6BAAf,UACI,8BACI,yBAEJ,sBAAKA,UAAU,aAAf,UACI,cAAC,IAAD,CAAMC,GAAK,WAAWD,UAAU,gCAAhC,4BACA,cAAC,IAAD,CAAMC,GAAK,WAAWD,UAAU,gCAAhC,wBACA,cAAC,IAAD,CAAMC,GAAK,WAAWD,UAAU,8BAAhC,2DAIZ,sBAAKA,UAAU,WAAf,UACI,qBAAKA,UAAU,aAEf,qBAAKA,UAAU,aAEnB,qBAAKA,UAAU,aAEf,qBAAKA,UAAU,aAEf,qBAAKA,UAAU,aAEf,qBAAKA,UAAU,gBAGf,qBAAKA,UAAU,kBAIf,qBAAKA,UAAU,kCAAf,SACG,qBAAKA,UAAU,kBAAf,SACI,qBAAKA,UAAU,GAAf,SACI,sIAKX,qBAAKA,UAAU,SAASE,GAAK,OAA7B,SACI,sBAAKF,UAAW,2CAAhB,UACI,qBAAKA,UAAW,wCAEhB,uBAAMA,UAAW,cAAjB,UAEI,mBAAGA,UAAW,sBAAd,SACI,kCACA,uBACAG,KAAK,SACLC,KAAK,QACLC,MAAQ,SACRC,SAhQT,SAAAC,GACXjC,GAASiC,EAAEC,OAAOH,OALlB7B,IAOa,GANba,QAAQC,IAAIf,OAuQQ,+CAGJ,mBAAGyB,UAAW,sBAAd,SACI,kCACA,uBACAG,KAAK,SACLC,KAAK,QACLC,MAAQ,WACRC,SA/PP,SAAAC,GACbjC,GAASiC,EAAEC,OAAOH,OANlB7B,IAOe,GANfa,QAAQC,IAAIf,OAqQQ,qDAGHA,GACD,qBAAKyB,UAAW,wCAAhB,SACI,yBAASA,UAAW,kBAAkBM,SAlSvC,SAACC,GAChB5B,KACAxB,GAAe,GACfJ,EAAWwD,EAAEC,OAAOH,OACpBd,GAAqBgB,EAAEC,OAAOH,QA8Rd,UACI,wBAASI,UAAQ,EAACC,UAAQ,EAA1B,8BACApD,EACGI,EAAgBiD,KAAI,SAACzB,GAAD,OACpB,wBAAQmB,MAAOnB,EAAf,SAAyCA,GAAZA,EAAM0B,QAEtC,QAGP,GACArC,GAAI,GACL,qBAAKyB,UAAW,wCAAhB,SACI,yBAASA,UAAW,kBAAkBM,SAAY,SAACC,GAAMtD,EAAQsD,EAAEC,OAAOH,QAA1E,UACI,wBAASI,UAAQ,EAACC,UAAQ,EAA1B,8BACAlD,EACGI,EAAc+C,KAAI,SAACzB,GAAD,OAClB,wBAAQmB,MAAOnB,EAAf,SAAyCA,GAAZA,EAAM0B,QAEtC,SAhUxBvB,QAAQC,IAAIxC,GACZuC,QAAQC,IAAItB,GACLd,GAkUqBqB,GACf,gCAEG,qBAAKyB,UAAW,wCAAhB,SACA,yBAASA,UAAW,kBAAkBM,SAAY,SAACC,GAAMtC,EAAOsC,EAAEC,OAAOH,QAAzE,UACI,wBAAQA,MAAM,GAAGI,UAAQ,EAACC,UAAQ,EAAlC,6BACCtD,EAEWU,EAAc,GAAG6C,KAAI,SAACzB,GAAD,OACrB,wBAAQmB,MAAOnB,EAAf,SAAyCA,GAAZA,EAAM0B,QAE9C,QAIL,qBAAKZ,UAAW,wCAAhB,SACI,yBAAQa,UAAQ,EAAEb,UAAW,kBAAkBM,SAAY,SAACC,GAAMlC,GAAQkC,EAAEC,OAAOH,QAAnF,UACI,wBAASI,UAAQ,EAACC,UAAQ,EAA1B,2BACCtD,EAEWU,EAAc,GAAG6C,KAAI,SAACzB,GAAD,OACrB,wBAAQmB,MAAOnB,EAAf,SAAyCA,GAAZA,EAAM0B,QAG9C,QAIT,qBAAKZ,UAAW,wCAAhB,SACI,yBAAQa,UAAQ,EAAEb,UAAW,kBAAkBM,SAAY,SAACC,GAAMpC,EAAOoC,EAAEC,OAAOH,QAAlF,UACI,wBAASI,UAAQ,EAACC,UAAQ,EAA1B,0BACCtD,EAEWU,EAAc,GAAG6C,KAAI,SAACzB,GAAD,OACrB,wBAAQmB,MAAOnB,EAAf,SAAyCA,GAAZA,EAAM0B,QAE9C,WAGH,IAEN,qBAAKZ,UAAU,iBAAf,SACI,4BAAIvB,OAGPF,GAAI,GACD,sBAAKyB,UAAU,mBAAf,UACI,eAAC,IAAD,CACAc,QA7LX,WACD,QAAR9D,EACA8C,KAEApB,GAAgB,2CA0LIsB,UAAW,gBAFX,wBAMI,mBAAGA,UAAU,iBAAb,+BAGJ,eAAC,IAAD,CAEAc,QA7LX,WACD,QAAR9D,EACA8C,KAEApB,GAAgB,2CA0LIsB,UAAW,gBAHX,sBAQI,mBAAGA,UAAU,iBAAb,kCAKXzB,GACG,8BACQ,sBAAKyB,UAAU,mBAAf,UACI,eAAC,IAAD,CACAc,QAnMnB,WACT5C,GAAKF,GAAKlB,GAASsB,GACnBqB,KAEAf,GAAgB,2CAgMYsB,UAAW,gBAFX,2BAKA,mBAAGA,UAAU,iBAAb,+BAGA,eAAC,IAAD,CACAc,QAjMnB,WAET5C,GAAKF,GAAKlB,GAASsB,GACnByB,KAEAnB,GAAgB,2CA6LYsB,UAAW,gBAFX,sBAKA,mBAAGA,UAAU,iBAAb,oCAIf,WAOb,qBAAKA,UAAU,4CAAf,SACG,sBAAKA,UAAU,8BAAf,UACI,qBAAKA,UAAU,QAAf,SACI,uPAEJ,qBAAKA,UAAU,qBAAf,SACI,cAAC,IAAD,CAAMC,GAAK,aAAaD,UAAU,aAAlC,gDAIX,qBAAKA,UAAU,4CAAf,SACG,sBAAKA,UAAU,8BAAf,UACI,qBAAKA,UAAU,QAAf,SACI,8IAEJ,qBAAKA,UAAU,qBAAf,SACI,cAAC,IAAD,CAAMC,GAAI,0BAA0BD,UAAU,aAA9C","file":"static/js/5.b53c6d40.chunk.js","sourcesContent":["import React , {useState , useEffect} from 'react';\nimport {Link , withRouter} from \"react-router-dom\"\nimport axios from \"axios\"\nimport BarradeNavegacion from '../components/BarradeNavegacion'\nimport '../styles/home.css'\nimport M from \"materialize-css\"\n\nconst  Home = (props) => {\n\n    const [materia , setMateria] = useState(\"matematicas\") ;\n    const [anal , setAnal] = useState(\"mate\")\n    const [verOpciones , setVerOpciones ] = useState(false) ;\n    const [verDatos , setVerDatos ] = useState(false) ;\n    const [verMateria , setVerMateria ] = useState(false) ;\n    const [verAnales, setVerAnales ] = useState(false) ;\n    const [materiasTraidas,setMateriasTraidas] = useState([])\n    const [analesTraidas,setAnalesTraidas] = useState([])\n    const [materiasTodas,setMateriasTodas] = useState([])\n    const [año , setAño] = useState(\"\") ;\n    const [mes , setMes] = useState(\"\") ;\n    const [face , setFace] = useState(\"\")\n    const [volver , setVolver] = useState(true) ;\n    const [grupo , setGrupo] = useState(false);\n    const [ver , setVer] = useState(\"\");\n    const [mensajeError , setMensajeError] = useState(\"\");\n    const {history} = props\n\n    const handleChangeRadio = event => {\n        const target = event.target\n        const name = target.name\n        const value = target.value\n        setGrupo(value)\n        console.log(grupo)\n\n    }\n\n    // funcion para administrar formulario\n\n    const AdminForm = () =>{\n        console.log(materia)\n        console.log(año)\n        return verOpciones\n    }\n\n    // funcion para traer materias\n    const ejecutarTraerMateria = async () =>{\n        BuscarMateria()\n        \n    }\n\n    // seleccionar materia\n    const CambiarMateria = (e) =>{ \n            ejecutarTraerMateria()\n            setVerOpciones(true)\n            setMateria(e.target.value)\n            todasLasMateriaDatos(e.target.value)\n    }\n    \n\n    //elegir formulario Anales \n    const ElegirAnales = (Y) => {\n        setVer(Y)\n        console.log(ver)\n    } \n    //obtener valor de checkbox anales\n    const Anales = e =>{\n        setGrupo(e.target.value) ;\n        \n        ElegirAnales(false) \n    }\n\n\n   //elegir formulario examenes\n    const ElegirExamenes = (Y) => {\n        setVer(Y)\n        console.log(ver)\n    } \n\n    //obtener valor de checkbox examenes\n    const Examenes = e =>{\n        setGrupo(e.target.value) ;\n        ElegirExamenes(true)\n        \n        \n    }\n    \n    \n  \n\n    //peticion para traer todas las materias despues de cargar la pagina\n\n    const BuscarMateria = async () =>{\n        const datos = await axios({\n            method:'get' , \n            url : '/todasM'\n        })\n        if (datos.data != \"\") {\n            setVerMateria(datos.data)\n            setMateriasTraidas(datos.data)\n            setVerMateria(true)\n            \n        }  \n    }\n\n    //peticion para traer todos los anales despues de cargar la pagina\n\n    const BuscarAnales = async () =>{\n        const datos = await axios({\n            method:'get' , \n            url : '/todasAnales'\n        })\n        console.log(datos.data , \"sssssssssssssssssssssssss\")\n        if (datos.data != \"\") {\n            setAnalesTraidas(datos.data)\n            setVerAnales(true)\n              \n        }  \n    }\n    \n    //peticion para traer los años , meses , faces , de la materia seleccionada\n\n    const todasLasMateriaDatos = async (materias) =>{\n        const datos = await axios({\n            method:'get' , \n            url : '/uu/' + materias\n        })\n        console.log(datos.data)\n        \n        if (datos.data != \"\") {\n            setMateriasTodas(datos.data)\n            setVerDatos(true)\n        }\n        \n    }\n\n        //peticion para traer el link del pdf de la materia seleccionada sin correccion\n        const BuscarMateriaSeleccionadaLink = async () =>{\n            const datosMateria = año + mes + face + materia \n            console.log(datosMateria)\n            const datos = await axios({\n                method:'get' , \n                url : `/examenesSC/${datosMateria}`\n            })\n            console.log(datos.data)\n            if ((datos.data != \"\") && ( datos.data != \"Examen no disponible\")) {                    \n                window.open(`${datos.data}`)\n                \n            }else{\n                setMensajeError(\"No disponile !\")\n            } \n        }\n\n        //peticion para traer el link del pdf de la materia seleccionada con correccion\n        const BuscarMateriaSeleccionadaLinkSinCoreccion = async () =>{\n            const datosMateria = año + mes + face + materia \n            console.log(datosMateria)\n            const datos = await axios({\n                method:'get' , \n                url : `/examenesCC/${datosMateria}`\n\n            })\n            \n                console.log(datos.data)\n                if ((datos.data != \"\") && ( datos.data != \"Correccion no disponible\")) {                    \n                    window.open(`${datos.data}`)\n                    \n                }else{\n                    setMensajeError(\"No disponile !\")\n                }                   \n        }\n\n        //------------FUNCION PARA OBTENER EL LINK DEL ANAL_SC SELECCIONADO\n\n        const BuscarMateriaSeleccionadaLinkAnalesSC = async () =>{\n            const datosMateria = anal\n            console.log(datosMateria)\n            const datos = await axios({\n                method:'get' , \n                url : `/analesObtenerNo/${datosMateria}`\n            })\n            \n                console.log(datos.data)\n                if ((datos.data != \"\") && ( datos.data != \"Correccion no disponible\")) {                    \n                    window.open(`${datos.data}`)\n                    \n                }else{\n                    setMensajeError(\"No disponile !\")\n                }                   \n        }\n\n\n        //-----------FUNCION PARA OBTENER EL LINK DEL ANAL_CC SELECCIONADO\n\n        const BuscarMateriaSeleccionadaLinkAnalesCC = async () =>{\n                const datosMateria = anal\n                console.log(datosMateria)\n                const datos = await axios({\n                    method:'get' , \n                    url : `/analesObtenerCo/${datosMateria}`\n                })\n            \n                console.log(datos.data)\n                if ((datos.data != \"\") && ( datos.data != \"Correccion no disponible\")) {                    \n                    window.open(`${datos.data}`)\n                    \n                }else{\n                    setMensajeError(\"No disponile !\")\n                }                   \n        }\n\n//************************************************************************************* */\n    const Modal = (id) => {\n        const elems = document.querySelectorAll(\".modal\")\n        const instance = M.Modal.init(elems,{})\n\n    }\n    const VolverTrue = () =>{\n        setVolver(true)\n    }\n//************************************************************************************* */\n   \n    // funcion para ver el pdf del anal corregido seleccionado \n    const Validar1 = ()=>{\n        if (anal != \"mate\"){\n            BuscarMateriaSeleccionadaLinkAnalesSC()\n        }else{\n            setMensajeError(\"todos las selecciones son obligatorios\")\n        }       \n    }\n    \n\n    // funcion para ver el pdf del anal corregido seleccionado \n    const Validar2 = ()=>{\n        if (anal != \"mate\"){\n            BuscarMateriaSeleccionadaLinkAnalesSC()\n        }else{\n            setMensajeError(\"todos las selecciones son obligatorios\")\n        } \n    }\n\n    // funcion para ver el pdf del examen no corregido seleccionado \n    const Validar3 = ()=>{\n        if (mes&&año&&materia&&face){\n            BuscarMateriaSeleccionadaLink()\n        }else{\n            setMensajeError(\"todos las selecciones son obligatorios\")\n        }\n        \n    }\n\n    // funcion para ver el pdf del examen corregido seleccionado \n    const Validar4 = ()=>{\n\n        if (mes&&año&&materia&&face){\n            BuscarMateriaSeleccionadaLinkSinCoreccion()\n        }else{\n            setMensajeError(\"todos las selecciones son obligatorios\")\n        }\n        \n    }\n\n    useEffect(()=>{\n        BuscarMateria()\n        todasLasMateriaDatos(materia)\n        BuscarAnales()\n        \n    },[])\n\n   return(\n        <div className = \"\">\n            <BarradeNavegacion/>\n            <div className=\"contenedor-de-banner\">\n                <div className=\"contenido-banner container\">\n                    <div>\n                        <h4></h4>\n                    </div>\n                    <div className=\"link-boton\">\n                        <Link to = \"/iniciar\" className=\"btn-small aparecer-back-boton\">Inicia session</Link>\n                        <Link to = \"/iniciar\" className=\"btn-small aparecer-back-boton\">Registrate</Link>\n                        <Link to = \"/iniciar\" className=\"btn-small no-apareser-boton\">Resuelve tus dudas en cualquier parte</Link>\n                    </div>\n                </div>\n            </div>\n            <div className=\"Effectos\">\n                <div className=\"Effecto1\">\n                </div>\n                <div className=\"Effecto2\">\n            </div>\n            <div className=\"Effecto3\">\n            </div>\n            <div className=\"Effecto4\">\n            </div>\n            <div className=\"Effecto5\">\n            </div>\n            <div className=\"Effecto6\">\n            </div>\n        </div>\n            <div className=\"margen-arriba\">\n                \n            </div>\n\n            <div className=\"contenedor-de-targetas-visitass\">\n               <div className=\"targeta-visitaa\">\n                   <div className=\"\">\n                       <p>Selecciona el asignatura , el  año y el mes del examen o la correccion que deseas descargar </p>\n                   </div>\n               </div>\n            </div>\n\n            <div className=\"formID\" id = \"form\">\n                <div className =\"row formulario-contenedor-text z-depth-1\" >\n                    <div className =\"col s12 texto-encabezado-formulario\">\n                    </div>\n                    <form className =\"formulario \"  >\n\n                        <p className =\"contenedor-de-radio\">\n                            <label>\n                            <input \n                            name=\"grupos\" \n                            type=\"radio\" \n                            value = 'anales'\n                            onChange = {Anales} \n                                \n                                \n                            />\n                            <span>anales</span>\n                            </label>\n                        </p>\n                        <p className =\"contenedor-de-radio\">\n                            <label>\n                            <input \n                            name=\"grupos\" \n                            type=\"radio\" \n                            value = \"examenes\"\n                            onChange = {Examenes} \n                            />\n                            <span>solo examene</span>\n                            </label>\n                        </p>\n                        {ver?\n                        <div className =\"input-field contenedor-input  col s12\">\n                            <select  className =\"browser-default\" onChange = {CambiarMateria} >\n                                <option  disabled selected>Elige la materia</option>\n                               {verMateria?\n                                   materiasTraidas.map((datos) =>\n                                   <option value={datos} key = {datos.key}>{datos}</option>\n                                   )\n                               :\"\"}\n                            </select>\n                        </div>\n                        :\"\"}\n                        {ver?\"\":\n                        <div className =\"input-field contenedor-input  col s12\">\n                            <select  className =\"browser-default\" onChange = {(e) =>{setAnal(e.target.value)}} >\n                                <option  disabled selected>Elige la materia</option>\n                               {verAnales?\n                                   analesTraidas.map((datos) =>\n                                   <option value={datos} key = {datos.key}>{datos}</option>\n                                   )\n                               :\"\"}\n                            </select>\n                        </div>\n                        }\n                     {(AdminForm()&&ver)? \n                     <div>\n                        \n                        <div className =\"input-field contenedor-input  col s12\">\n                        <select  className =\"browser-default\" onChange = {(e) =>{setAño(e.target.value)}} >\n                            <option value=\"\" disabled selected>Elige el año</option>\n                            {verDatos?\n                                    \n                                        materiasTodas[2].map((datos) =>\n                                        <option value={datos} key = {datos.key}>{datos}</option>\n                                        )\n                            :\"\"}\n                        </select>\n                        </div>\n                       \n                        <div className =\"input-field contenedor-input  col s12\">\n                            <select required  className =\"browser-default\" onChange = {(e) =>{setFace(e.target.value)}} >\n                                <option  disabled selected>Elige la face</option>\n                                {verDatos?\n\n                                            materiasTodas[0].map((datos) =>\n                                            <option value={datos} key = {datos.key}>{datos}</option>\n                                            )\n\n                                :\"\"}\n                                \n                            </select>\n                        </div>\n                        <div className =\"input-field contenedor-input  col s12\">\n                            <select required  className =\"browser-default\" onChange = {(e) =>{setMes(e.target.value)}} >\n                                <option  disabled selected>Elige el mes</option>\n                                {verDatos?\n\n                                            materiasTodas[1].map((datos) =>\n                                            <option value={datos} key = {datos.key}>{datos}</option>\n                                            )\n                                :\"\"}\n                            </select>\n                        </div>\n                       </div>:\"\"}\n\n                        <div className=\"respuestaError\">\n                            <p>{mensajeError}</p>\n                        </div>\n\n                        {ver?\"\":                        \n                            <div className=\"botones-decargas\">\n                                <Link\n                                onClick = {Validar1}\n                                className =\"btn btn-small\" \n                                \n                                >\n                                    no1 corre..\n                                    <i className=\"material-icons\">cloud_download</i>\n                                </Link>\n\n                                <Link  \n                                \n                                onClick = {Validar2}             \n                                className =\"btn btn-small\" \n                                \n                            \n                                >\n                                    corregido\n                                    <i className=\"material-icons\">cloud_download</i>\n                                </Link>\n                            </div>\n                        }\n\n                        {ver?       \n                            <div>                                       \n                                    <div className=\"botones-decargas\">\n                                        <Link\n                                        onClick = {Validar3}\n                                        className =\"btn btn-small\" \n                                        >\n                                        no EXA corre..\n                                        <i className=\"material-icons\">cloud_download</i>\n                                        </Link>\n\n                                        <Link  \n                                        onClick = {Validar4}            \n                                        className =\"btn btn-small\"                                   \n                                        >\n                                        corregido\n                                        <i className=\"material-icons\">cloud_download</i>\n                                        </Link>\n                                    </div>\n                            </div>\n                        :\"\"}\n                    </form>\n                </div>\n            </div>\n\n\n\n            <div className=\"contenedor-de-targetas-visitas container \">\n               <div className=\"targeta-visita z-depth-2 b1\">\n                   <div className=\"texto\">\n                       <p>En esta seccion puedes publicar tus dudas  o pedir explicacion sobre algun tema que estas tratando y tambien aqui puedes ver los problemas presentados por los de mas y tienes la oportunidad de poder responderles </p>\n                   </div>\n                   <div className=\"botton-ver-seccion\">\n                       <Link to = \"/preguntas\" className=\"btn-small \">ver la seccion de preguntas</Link>\n                   </div>\n               </div>\n            </div>\n            <div className=\"contenedor-de-targetas-visitas container \">\n               <div className=\"targeta-visita z-depth-2 b2\">\n                   <div className=\"texto\">\n                       <p>Aqui encontraras todos los examenes de la selectividad de todas las convocatorias pero no estan corregidos </p>\n                   </div>\n                   <div className=\"botton-ver-seccion\">\n                       <Link to =\"/examenes_no_corregidos\" className=\"btn-small \">Examenes no corregidos</Link>\n                   </div>\n               </div>\n            </div>\n        </div>\n    )    \n\n}\n\n\n\nexport default withRouter(Home) ;"],"sourceRoot":""}